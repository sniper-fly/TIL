
webアプリの3層アーキテクチャにおける、

プレゼンテーション層とは？			ウェブブラウザとウェブサーバ。ユーザーインターフェースなど表面のやりとり。
アプリケーション層とは？			アプリサーバー。ユーザーからのリクエストを受け、java,ruby,phpなどを実行して処理する。
データ層とは？						主にデータの管理を行っている。データベースサーバーなど。


MVCモデルとは？						model, view, controllerの3つに分けてアプリケーションを設計すること。
modelとは？							データ処理と業務処理
viewとは？							結果をユーザに送る部分を担当
controllerとは？					ユーザーの命令を受けて、viewやmodelに指示を出す。

MVCモデルは3層アーキテクチャではアプリケーション層とデータ層に包含される。

冗長化とは？						webサーバーの窓口を増やして、一台当たりの負担を減らし、どこかがダウンしてもサービスを続けられるような構成。

webサーバーを複数持つときは、別のAPサーバーに静的コンテンツを毎度アクセスするか、
そうでなければウェブサーバー間でコンテンツを同期する必要がある。

webクライアントとは？				webサーバから情報を受け取り、ユーザーに表示するプログラム。

セッションとは？					ウェブサイトにアクセスして行う一連の行動のこと。セッションIDをcookieに含め、ユーザーの状態を管理する。
トランザクションとは？				通信やデータベース処理でのそれ以上分割できない作業単位。トランザクションごとに成功か失敗か、しかない。

キャッシュサーバーとは？			リクエストに対するレスポンスを覚え、webサーバーやＤＢＭＳに負担を掛けないようにするサーバー。
ＣＤＮとは？						Contents Delivery Network. 大きなサイズのコンテンツをより速く配信できるようにするキャッシュサーバーの集合体。
								CDNを利用することで、オリジンサーバへのアクセス負荷を軽減させることができる。

同期通信とは？						データ通信のリクエストを出してからレスポンスが来るまで待つ通信方式。非同期通信では、待っている間にも別の処理をする。
Ajaxとは？							Asynchronous Javascript XML.クライアントサイドのjsがwebサーバと直接通信する。サーバ負荷が低い。

Web APIとは？						ユーザではなくプログラムがデータベースやサービスにアクセスする窓口。

マッシュアップとは？				APIを組み合わせて新しいウェブサービスを生み出すこと。
↑のメリットデメリットは？			各社が手間暇かけて作ったプログラムを簡単に利用できる。各社の仕様変更の影響を受けやすい。

CGIとは？						Common Gateway Interface.クライアントのリクエストを受け、サーバが外部プログラムを呼び出して処理を行ってクライアントに返すための仕組み。
CGIへのデータの渡し方4種？？		リンクに情報そのものを載せるコマンドライン引数渡し、参照を載せるパス渡し、GETメソッド、POSTメソッド。